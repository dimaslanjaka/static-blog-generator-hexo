name: Clean Caches

on:
  push:
    branches: [ "master", "main" ]
    paths-ignore:
      - '**/*.tgz'
      - '**/*.gz'
      - '**/release/**'
  pull_request:
    types:
      - closed
    paths-ignore:
      - '**/release/**'
      - '**/*.tgz'
      - '**/*.gz'
      - '**/test*/**'
  workflow_dispatch:

# run single job
concurrency:
  group: clean-actions-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest

    name: Node ${{ matrix.node-version }} - ${{ matrix.os }}-${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#force-deletion-of-caches-overriding-default-cache-eviction-policy
      - name: Cleanup caches
        shell: bash
        if: contains(github.event.head_commit.message, 'clean') || contains(github.event.head_commit.message, 'update deps') || contains(github.event.head_commit.message, 'update dependencies')
        run: |
          gh extension install actions/gh-actions-cache
          REPO=${{ github.repository }}
          BRANCH=${{ github.ref }}
          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )
          ## Setting this to not fail the workflow while deleting cache keys.
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}