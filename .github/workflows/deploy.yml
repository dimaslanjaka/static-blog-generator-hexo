name: Test And Deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.tgz'
      - '**/*.gz'
      - '**/release/**'
      - '.github/codeql/*'
      - '**codeql**'
      - '**clean-caches**'
  pull_request:
    types:
      - closed
    paths-ignore:
      - '**/release/**'
      - '**/*.tgz'
      - '**/*.gz'
      - '**/test*/**'
  workflow_dispatch:

concurrency:
  group: build-${{ github.event.push.number || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all
    timeout-minutes: 120
    strategy:
      fail-fast: false
    env:
      NODE_OPTIONS: "--max_old_space_size=8192" #8192 4096 --expose-gc

    steps:
      - uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Jakarta"
          timezoneMacos: "Asia/Jakarta"
          timezoneWindows: "Western Indonesia Time"

      # CHECKOUT
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: "${{ secrets.ACCESS_TOKEN }}"
      - name: Checkout .deploy_git
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/dimaslanjaka.github.io
          ref: master
          path: .deploy_git
          token: "${{ secrets.ACCESS_TOKEN }}"
      - name: Checkout .deploy_git/chimeraland
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/chimeraland
          ref: gh-pages
          path: .deploy_git/chimeraland
          token: "${{ secrets.ACCESS_TOKEN }}"
      - name: Checkout .deploy_git/page
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/page
          ref: gh-pages
          path: .deploy_git/page
          token: "${{ secrets.ACCESS_TOKEN }}"
      - name: Checkout .deploy_git/docs
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/docs
          ref: master
          path: .deploy_git/docs
          token: "${{ secrets.ACCESS_TOKEN }}"

      # NODE SETUP
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          architecture: x64
          cache: 'npm'
          cache-dependency-path: '**/.guid'
          check-latest: true

      - name: Set env
        id: set-env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
          echo "CACHE_NPM=$(npm config get cache)" >> $GITHUB_ENV
          echo "CACHE_YARN=$(yarn cache dir)" >> $GITHUB_ENV
          echo "CACHE_YARN2=$(yarn config get cacheFolder)" >> $GITHUB_ENV
          echo "cache-npm=$(npm config get cache)" >> $GITHUB_OUTPUT
          echo "cache-yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "cache-yarn2=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - name: Get env
        run: |
          echo "branch      : ${{ env.GITHUB_BRANCH }}"
          echo "commit msg  : ${{ github.event.head_commit.message }}"
          echo "commit hash : ${{ env.GITHUB_SHA_SHORT }}"
          echo "commit url  : ${{ env.GITHUB_COMMIT_URL }}"
          echo "runner url  : ${{ env.GITHUB_RUNNER_URL }}"
          echo "cache npm   : ${{ env.CACHE_NPM }}"
          echo "cache yarn  : ${{ env.CACHE_YARN }}"
          echo "cache yarn2 : ${{ env.CACHE_YARN2 }}"

      - name: Set EOL git configs
        continue-on-error: true
        run: |
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all
      - name: Git setup user email
        continue-on-error: true
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      #- uses: pat-s/always-upload-cache@v3.0.11
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ steps.set-env.outputs.cache-npm }}
            ${{ steps.set-env.outputs.cache-yarn }}
            ${{ steps.set-env.outputs.cache-yarn2 }}
            /home/runner/db.json
            /home/runner/public
            /home/runner/tmp
            /home/runner/build
            /home/runner/source/_posts
            **/dist/**
            **/node_modules
          key: node-cache-${{ runner.os }}-npm-${{ hashFiles('**/.guid') }}
          restore-keys: |
            node-cache-${{ runner.os }}-npm-${{ hashFiles('**/.guid') }}
            node-cache-${{ runner.os }}-npm-

      - name: Install Global Packages
        # if: steps.cache.outputs.cache-hit != 'true'
        run: npm i -g typescript ts-node gulp-cli hexo-cli webpack-cli rimraf npm-run-all npm-check-updates --location=global

      - name: Install dependencies
        id: install-npm
        shell: bash
        continue-on-error: true
        run: |
          npm run update
          npm i -O file:multisite/chimeraland/chimeraland
          npm i -O file:multisite/chimeraland

      - name: Install Update
        if: steps.install-npm.outcome == 'failure'
        run: npm update

      - run: npm i https://github.com/dimaslanjaka/static-blog-generator/raw/master/release/static-blog-generator.tgz

      - name: build chimeraland
        run: npm install && npm run build
        working-directory: ./multisite/chimeraland

      - run: gulp post:standalone
      - run: gulp post:copy
      - run: hexo generate
      - run: gulp sitemap
        continue-on-error: true
        id: sitemap
      - run: gulp feed
        continue-on-error: true
        id: feed
      - run: gulp deploy:copy
      - run: gulp seo
      - run: gulp safelink

      - name: Collect Reports
        shell: bash
        continue-on-error: true
        run:
          echo "conclusion=${{ steps.feed.conclusion }}" > .deploy_git/reports/feed.txt
          echo "conclusion=${{ steps.sitemap.conclusion }}" > .deploy_git/reports/sitemap.txt
          echo "outcome=${{ steps.feed.outcome }}" >> .deploy_git/reports/feed.txt
          echo "outcome=${{ steps.sitemap.outcome }}" >> .deploy_git/reports/sitemap.txt
          cd .deploy_git
          git add reports
          git commit -m "Update reports from ${{ env.GITHUB_COMMIT_URL }}"

      - name: push .deploy_git
        shell: bash
        id: push-manual
        continue-on-error: true
        working-directory: ./.deploy_git
        run: |
          git config --global user.name 'dimaslanjaka'
          git config --global user.email 'dimaslanjaka@gmail.com'
          git submodule foreach "git add -A | :"
          git submodule foreach "git commit -am 'Update build from ${{ env.GITHUB_COMMIT_URL }}' | :"
          git remote set-url origin https://${{ secrets.ACCESS_TOKEN }}@github.com/dimaslanjaka/dimaslanjaka.github.io
          git add .
          git commit -m "Update build from ${{ env.GITHUB_COMMIT_URL }}" -m "commit hash: ${{ env.GITHUB_SHA_SHORT }}" -m "commit url: ${{ env.GITHUB_COMMIT_URL }}" -m "runner: ${{ env.GITHUB_RUNNER_URL }}"

      - run: git push origin master
      - run: git push --recurse-submodules=on-demand

      - name: Deploy ðŸš€
        #if: ${{ false }}
        #if: steps.push-manual.outcome == 'failure' && steps.push-manual.conclusion == 'failure'
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          commit-message: "update: commit ${{ env.GITHUB_COMMIT_URL }} runner ${{ env.GITHUB_RUNNER_URL }}"
          branch: 'master' # The branch the action should deploy to.
          folder: ".deploy_git" # The folder the action should deploy.
          force: false # merge instead push --force, (keep old / non modified) files?
          token: "${{ secrets.ACCESS_TOKEN }}" # github token
          repository-name: "dimaslanjaka/dimaslanjaka.github.io" # Repostory URL
          git-config-email: 'dimaslanjaka@gmail.com'
          git-config-name: 'dimaslanjaka'
          clean-exclude: "*"
