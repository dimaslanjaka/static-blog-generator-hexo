name: Test And Deploy

on:
  push:
    branches:
      - master

concurrency:
  group: build-${{ github.event.push.number || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      NODE_OPTIONS: "--max_old_space_size=8192" #8192 4096 --expose-gc

    steps:
      - uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Jakarta"
          timezoneMacos: "Asia/Jakarta"
          timezoneWindows: "Western Indonesia Time"
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '.guid'

      - name: Set env
        id: set-env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
          echo "CACHE_NPM=$(npm config get cache)" >> $GITHUB_ENV
          echo "CACHE_YARN=$(yarn cache dir)" >> $GITHUB_ENV
          echo "CACHE_YARN2=$(yarn config get cacheFolder)" >> $GITHUB_ENV
          echo "cache-npm=$(npm config get cache)" >> $GITHUB_OUTPUT
          echo "cache-yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "cache-yarn2=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - name: Get env
        run: |
          echo "branch      : ${{ env.GITHUB_BRANCH }}"
          echo "commit msg  : ${{ github.event.head_commit.message }}"
          echo "commit hash : ${{ env.GITHUB_SHA_SHORT }}"
          echo "commit url  : ${{ env.GITHUB_COMMIT_URL }}"
          echo "runner url  : ${{ env.GITHUB_RUNNER_URL }}"
          echo "cache npm   : ${{ env.CACHE_NPM }}"
          echo "cache yarn  : ${{ env.CACHE_YARN }}"
          echo "cache yarn2 : ${{ env.CACHE_YARN2 }}"
      - name: Set EOL git configs
        continue-on-error: true
        run: |
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all
      - name: Git setup user email
        if: matrix.node-version == '18.x' && matrix.architecture == 'x64' && runner.os == 'Linux' && steps.changes.outputs.files_changed == 'true'
        continue-on-error: true
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Update submodules
        run: |
          git config --global init.defaultBranch master
          git submodule update -i -r
          git submodule foreach git submodule update -i -r

      - uses: actions/cache@v3
        with:
          path: |
            ${{ steps.vars.outputs.npm }}
            ./db.json
            ./public
          key: ${{ runner.os }}-${{ hashFiles('.guid') }}

      - name: Clone site
        run: git clone -b master --single-branch https://github.com/dimaslanjaka/dimaslanjaka.github.io .deploy_git

      - name: Install Global Packages
        run: npm i -g typescript ts-node gulp-cli hexo-cli webpack-cli rimraf npm-run-all npm-check-updates --location=global

      - name: Install dependencies
        id: install-deps
        shell: bash
        continue-on-error: true
        run: |
          npm run update
          #npm i -D https://github.com/dimaslanjaka/static-blog-generator.git
          #npm i -D https://github.com/dimaslanjaka/hexo-post-parser.git
          #npm i -D https://github.com/dimaslanjaka/safelink.git
          #npm i -D https://github.com/dimaslanjaka/git-command-helper.git
          #npm i https://github.com/dimaslanjaka/hexo-seo.git
          #npm i https://github.com/dimaslanjaka/hexo-adsense.git

      - name: Install Legacy Peer Dependencies
        run: npm install --legacy-peer-deps
        if: steps.install-deps.outcome == 'failure'
        id: install-legacy
        shell: bash
        continue-on-error: true

      - name: Install Verbose
        if: steps.install-legacy.outcome == 'failure'
        id: install-verbose
        continue-on-error: true
        shell: bash
        run: |
          rm -rf node_modules
          npm install --verbose
      - name: Install Update Binary
        id: install-update
        if: steps.install-verbose.outcome == 'failure'
        shell: bash
        run: |
          rm -rf node_modules
          npm install --no-shrinkwrap --update-binary
        continue-on-error: true

      - name: Clean Install
        id: install-clean
        shell: bash
        if: steps.install-update.outcome == 'failure'
        run: |
          rm -rf node_modules package-lock.json
          npm install
          git add package-lock.json
          git commit -m "update dependencies"
          git push

      - name: Dump Installations
        run: |
          echo "install-legacy.outcome ${{ steps.install-legacy.outcome }}"
          echo "install-legacy.conclusion ${{ steps.install-legacy.conclusion }}"
          echo "install-verbose.outcome ${{ steps.install-verbose.outcome }}"
          echo "install-verbose.conclusion ${{ steps.install-verbose.conclusion }}"
          echo "install-update.outcome ${{ steps.install-update.outcome }}"
          echo "install-update.conclusion ${{ steps.install-update.conclusion }}"
          echo "install-clean.outcome ${{ steps.install-clean.outcome }}"
          echo "install-clean.conclusion ${{ steps.install-clean.conclusion }}"

      - run: npm run build
      - name: Git push
        if: matrix.node-version == '18.x' && matrix.architecture == 'x64' && runner.os == 'Linux' && steps.changes.outputs.files_changed == 'true'
        continue-on-error: true
        working-directory: .deploy_git
        run: |
          git submodule foreach "git add . | :"
          git submodule foreach "git commit -m 'Update build from ${{ env.GITHUB_COMMIT_URL }}' | :"
          git add .
          git commit -m "Update build from ${{ env.GITHUB_COMMIT_URL }}" -m "commit hash: ${{ env.GITHUB_SHA_SHORT }}" -m "commit url: ${{ env.GITHUB_COMMIT_URL }}" -m "runner: ${{ env.GITHUB_RUNNER_URL }}"
          git push

      - name: Deploy ðŸš€
        #if: matrix.os == 'ubuntu-latest' && matrix.node == 16
        if: ${{ false }}
        #if: steps.hexo-validate.outcome == 'success' && steps.hexo-validate.conclusion == 'success'
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: master # The branch the action should deploy to.
          folder: .deploy_git # The folder the action should deploy.
          force: false # merge instead push --force, (keep old / non modified) files?
          token: "${{ secrets.GITHUB_TOKEN }}" # github token
          repository-name: "dimaslanjaka/dimaslanjaka.github.io" # Repostory URL
