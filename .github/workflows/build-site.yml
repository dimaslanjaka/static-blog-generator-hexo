name: Build Site

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.tgz'
      - '**/*.gz'
      - '**/release/**'
      - '.github/codeql/*'
      - '**codeql**'
      - '**clean-caches**'
  workflow_dispatch:

concurrency:
  # group: build-${{ github.event.push.number || github.event.pull_request.number || github.ref }}
  group: deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all
    timeout-minutes: 120
    strategy:
      fail-fast: false
    env:
      NODE_OPTIONS: '--max_old_space_size=8192' #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    steps:
      - run: git config --global core.autocrlf false
      - uses: szenius/set-timezone@v1.1
        name: set os timezone
        with:
          timezoneLinux: 'Asia/Jakarta'
          timezoneMacos: 'Asia/Jakarta'
          timezoneWindows: 'Indonesia Standard Time'
      - uses: actions/checkout@v3
        name: checkout root project
        with:
          ref: master
          repository: dimaslanjaka/static-blog-generator-hexo
          submodules: recursive
          token: '${{ secrets.ACCESS_TOKEN }}'
      - run: sh ./bin/submodule-install
        shell: bash
      - name: Checkout .deploy_git
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/dimaslanjaka.github.io
          ref: master
          path: site/.deploy_git
          token: '${{ secrets.ACCESS_TOKEN }}'
      - name: Checkout site/.deploy_git/chimeraland
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/chimeraland
          ref: gh-pages
          path: site/.deploy_git/chimeraland
          token: '${{ secrets.ACCESS_TOKEN }}'
      - name: Checkout site/.deploy_git/page
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/page
          ref: gh-pages
          path: site/.deploy_git/page
          token: '${{ secrets.ACCESS_TOKEN }}'
      - name: Checkout .deploy_git/docs
        uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/docs
          ref: master
          path: .deploy_git/docs
          token: '${{ secrets.ACCESS_TOKEN }}'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          architecture: x64
          cache: 'yarn'
          check-latest: true
      - run: npm i -g npm-run-all lerna nx gulp-cli hexo-cli typescript ts-node depcheck husky
      - name: Set env
        id: set-env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
      - run: node package-install.js --prod
      - run: yarn install
        id: install
        continue-on-error: true
        name: install
      - run: |
          sh bin/clean-nodemodules && yarn install
        if: steps.install.outcome == 'failure'
        name: clean install
        shell: bash
      - run: yarn workspace chimeraland build
      - run: yarn workspace chimeraland build
      - run: yarn workspace wmi run post:standalone
      - run: yarn workspace wmi run post:copy
      - run: yarn workspace wmi exec "hexo generate"
      - run: yarn workspace wmi run generate:sitemap
      - run: yarn workspace wmi run generate:feed
      - run: gulp deploy:copy
        working-directory: site
      - run: npx sbg deploy seo
        working-directory: site
      - run: npx sbg deploy safelink
        working-directory: site
      - name: install site/.deploy_git/page
        shell: bash
        run: npm install --omit=dev --production
        continue-on-error: true
        working-directory: site/.deploy_git/page
      - name: install site/.deploy_git
        shell: bash
        run: npm install --omit=dev --production
        continue-on-error: true
        working-directory: site/.deploy_git